{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chucker \u00b6 Chucker simplifies the inspection of HTTP(S) requests/responses fired by your Android App. Chucker works as an OkHttp Interceptor persisting all those events inside your application, and providing a UI for inspecting and sharing their content. Apps using Chucker will display a push notification showing a summary of ongoing HTTP activity. Tapping on the notification launches the full Chucker UI. Apps can optionally suppress the notification, and launch the Chucker UI directly from within their own interface. Features \ud83e\uddf0 \u00b6 Don't forget to check the changelog to have a look at all the changes in the latest version of Chucker. Compatible with OkHTTP 4 API >= 21 compatible Easy to integrate (just 2 gradle implementation lines). Works out of the box , no customization needed. Empty release artifact \ud83e\uddfc (no traces of Chucker in your final APK). Support for body text search with highlighting \ud83d\udd75\ufe0f\u200d\u2642\ufe0f Support for showing images in HTTP Responses \ud83d\uddbc Multi-Window \ud83d\udeaa \u00b6 The main Chucker activity is launched in its own task, allowing it to be displayed alongside the host app UI using Android 7.x multi-window support. Redact-Header \ud83d\udc6e\u200d\u2642\ufe0f \u00b6 Warning The data generated and stored when using Chucker may contain sensitive information such as Authorization or Cookie headers, and the contents of request and response bodies. It is intended for use during development , and not in release builds or other production deployments. You can redact headers that contain sensitive information by calling redactHeader(String) on the ChuckerInterceptor . interceptor . redactHeader ( \"Auth-Token\" , \"User-Session\" );","title":"Overview"},{"location":"#chucker","text":"Chucker simplifies the inspection of HTTP(S) requests/responses fired by your Android App. Chucker works as an OkHttp Interceptor persisting all those events inside your application, and providing a UI for inspecting and sharing their content. Apps using Chucker will display a push notification showing a summary of ongoing HTTP activity. Tapping on the notification launches the full Chucker UI. Apps can optionally suppress the notification, and launch the Chucker UI directly from within their own interface.","title":"Chucker"},{"location":"#features","text":"Don't forget to check the changelog to have a look at all the changes in the latest version of Chucker. Compatible with OkHTTP 4 API >= 21 compatible Easy to integrate (just 2 gradle implementation lines). Works out of the box , no customization needed. Empty release artifact \ud83e\uddfc (no traces of Chucker in your final APK). Support for body text search with highlighting \ud83d\udd75\ufe0f\u200d\u2642\ufe0f Support for showing images in HTTP Responses \ud83d\uddbc","title":"Features \ud83e\uddf0"},{"location":"#multi-window","text":"The main Chucker activity is launched in its own task, allowing it to be displayed alongside the host app UI using Android 7.x multi-window support.","title":"Multi-Window \ud83d\udeaa"},{"location":"#redact-header","text":"Warning The data generated and stored when using Chucker may contain sensitive information such as Authorization or Cookie headers, and the contents of request and response bodies. It is intended for use during development , and not in release builds or other production deployments. You can redact headers that contain sensitive information by calling redactHeader(String) on the ChuckerInterceptor . interceptor . redactHeader ( \"Auth-Token\" , \"User-Session\" );","title":"Redact-Header \ud83d\udc6e\u200d\u2642\ufe0f"},{"location":"changelog/","text":"Change Log \u00b6 This file follows Keepachangelog format. Please add your entries according to this format. Unreleased \u00b6 Added \u00b6 Decoding of request and response bodies can now be customized. In order to do this a BodyDecoder interface needs to be implemented and installed in the ChuckerInterceptor via ChuckerInterceptor.addBinaryDecoder(decoder) method. Decoded bodies are then displayed in the Chucker UI. Create dynamic shortcut when ChuckerInterceptor added. Users can opt out of this feature using createShortcut(false) in ChuckerInterceptor.Builder Brotli compression support Added ability to export list of transactions as .har file. Added ability to save single transaction as .har file. Fixed \u00b6 Fixed request headers not being redacted in case of failures #545 . Fixed wrongful processing of one shot and duplex requests #544 . Fixed writing to database on the main thread #487 . Fixed RTL issue in payload view Fixed StrictMode ThreadPolicy violations #737 Removed \u00b6 Removed parametrized ChuckerInterceptor constructor in favour of builder pattern. Constructor that accepts only Context is still available. Removed the Throwable reporting feature as well as all the @Deprecated related methods. Changed \u00b6 Updated OkHttp to 4.9.1 Version 3.5.2 (2021-07-28) \u00b6 This release is a re-deployment of 3.5.1, since 3.5.1 aar didn't upload properly on Maven Central. Version 3.5.1 (2021-07-19) \u00b6 Note: this release wasn't properly uploaded to Maven Central, so update to a newer verion is required. Fixed \u00b6 Fix crash on Android 12 due to missing immutability flags in deprecated error reporting feature #653 . Version 3.5.0 (2021-06-29) \u00b6 Note: this release has issue with Android 12 support, so update to 3.5.2 is highly recommended. Added \u00b6 Android 12 support. Fixed \u00b6 Fix crash on Android 12 due to missing immutability flags #593 . Fix not setting request body type correctly #538 . Version 3.4.0 (2020-11-05) \u00b6 Added \u00b6 ChuckerInterceptor.Builder for fluent creation of the interceptor. It will also help us with preserving binary compatibility in future releases of 4.x . [#462] Changed \u00b6 Bumped targetSDK and compileSDK to 30 (Android 11). Removed \u00b6 kotlin-android-extensions plugin for better compatibility with Kotlin 1.4.20. Fixed \u00b6 Fixed memory leak in MainActivity #465 . Fixed GzipSource is not closed error reported by StrictMode #472 . Fixed build failure for projects with new kotlin-parcelize plugin #480 . Deprecated \u00b6 ChuckerInterceptor constructor is now deprecated. Unless Context is the only parameter that you pass into the constructor you should migrate to builder. Version 3.3.0 (2020-09-30) \u00b6 This is a new minor release with multiple fixes and improvements. After this release we are starting to work on a new major release 4.x with minSDK 21. Bumping minSDK to 21 is required to keep up with newer versions of OkHttp . Versions 3.x will be supported for 6 months (till March 2021) getting bugfixes and minor improvements. Summary of changes \u00b6 Added a new flag alwaysReadResponseBody into Chucker configuration to read the whole response body even if consumer fails to consume it. Added port numbers as part of the URL. Numbers appear if they are different from default 80 or 443. Chucker now shows partially read application responses properly. Earlier in 3.2.0 such responses didn't appear in the UI. Transaction size is defined by actual payload size now, not by Content-length header. Added empty state UI for payloads, so no more guessing if there is some error or the payload is really empty. Added ability to export list of transactions. Added ability to save single transaction as file. Added ability to format URL encoded forms with button to switch between encoded/decoded URLs. Added generation of contrast background for image payload to distinguish Chucker UI from the image itself. Switched OkHttp dependency from implementation to api , since it is available in the public API. List items are now focusable on Android TV devices. Further improved test coverage. Deprecations \u00b6 Throwables capturing feature is officially deprecated and will be removed in next releases. More info in #321 . Bugfixes \u00b6 Fixed #311 with leaking Closable resource. Fixed #314 with overlapping UI on some device. Fixed #367 with empty shared text when Don't keep activities is turned on. Fixed #366 with crash when process dies. Fixed #394 with failing requests when FileNotFound error happens. Fixed #410 with conflicts when other apps already use generic FileProvider. Fixed #422 with IOException. Dependency updates \u00b6 Added Fragment-ktx 1.2.5 Added Palette-ktx 1.0.0 Updated Kotlin to 1.4.10 Updated Android Gradle plugin to 4.0.1 Updated Coroutine to 1.3.9 Updated AppCompat to 1.2.0 Updated ConstraintLayout to 2.0.1 Updated MaterialComponents to 1.2.1 Updated Gradle to 6.6.1 Credits \u00b6 This release was possible thanks to the contribution of: @adb-shell @cortinico @djrausch @gm-vm @JayNewstrom @MiSikora @vbuberen @psh Version 3.2.0 (2020-04-04) \u00b6 This is a new minor release with numerous internal changes. Summary of changes \u00b6 Chucker won't load the whole response into memory anymore, but will mutlicast it with the help of temporary files. It allows to avoid issues with OOM, like in reported in #218 . This change also allows to avoid problems with Chucker consuming responses, like reported in #242 . Added a red open padlock icon to clearly indicate HTTP requests in transactions list. Added TLS info (version and cipher suite) into Overview tab. Added ability to encode/decode URLs. Added RTL support. Switched from AsyncTasks to Kotlin coroutines. Switched to ViewBinding . Bumped targetSDK to 29. Greatly increased test coverage (we will add exact numbers and reports pretty soon). Bugfixes \u00b6 Fix for #218 with OOM exceptions on big responses. Fix for #242 with Chucker throwing exceptions when used as networkInterceptor() . Fix for #240 with HttpHeader serialisation exceptions when obfuscation is used. Fix for #254 with response body search being case-sensitive. Fix for #255 with missing search icon on Response tab. Fix for #241 with overlapping texts. Dependency updates \u00b6 Added kotlinx-coroutines-core 1.3.5 Added kotlinx-coroutines-android 1.3.5 Updated Kotlin to 1.3.71 Updated Android Gradle plugin to 3.6.1 Updated Room to 2.2.5 Updated OkHttp to 3.12.10 Updated Detekt to 1.7.3 Updated Dokka to 0.10.1 Updated KtLint plugin to 9.2.1 Updated MaterialComponents to 1.1.0 Updated Gradle to 6.3 Credits \u00b6 This release was possible thanks to the contribution of: @adammasyk @cortinico @CuriousNikhil @hitanshu-dhawan @MiSikora @technoir42 @vbuberen Version 3.1.2 (2020-02-09) \u00b6 This is hot-fix release to fix multiple issues introduced in 3.1.0 . Summary of Changes \u00b6 All Chucker screens now have their own ViewModel . Due to this change user can now open the transaction in progress and the content will appear as soon as transaction finishes. No need for reopening transaction anymore. Bugfixes \u00b6 Fixed an issue introduced in 3.1.0 where image downloading fails if OkHttp was used for image loading in libraries like Glide, Picasso or Coil. Fixed an issue with invalid CURL command generation. Fixed an issue with crashes if ProGuard/R8 minification is applied to Chucker. Fixed an issue with crash when user taps Save in a transaction, which is still in progress. Fixed an issue with crash when user taps Clear from notification shade while the original app is already dead. Fixed an issue with possible NPEs. Credits \u00b6 This release was possible thanks to the contribution of: @MiSikora @vbuberen Version 3.1.1 (2020-01-25) \u00b6 This is hot-fix release to fix issue introduced in 3.1.0 . Summary of Changes \u00b6 Fixed an issue introduced in 3.1.0 where some of response bodies were shown as null and their sizes were 0 bytes. Credits \u00b6 This release was possible thanks to the contribution of: @cortinico Version 3.1.0 (2020-01-24) \u00b6 This version shouldn't be used as dependency due to #203 . Use 3.1.1 instead. \u00b6 This is a new minor release of Chucker. Please note that this minor release contains multiple new features (see below) as well as multiple bugfixes. Summary of Changes \u00b6 The library is now fully converted to Kotlin and migrated to AndroidX! The whole UI has been revamped to support Dark Theme which follows your device theme. The Response/Request Body is now displayed in a RecyclerView , drastically improving performances on big payloads. HTTP Response/Request Body can now be saved in file. Notifications for Throwable and HTTP Traffic are now going into separate channels. A lot of classes inside the .internal package have restricted visibility (from public to internal). Also, resources like strings, dimens and drawables from Chucker won't appear in your autocomplete suggestions. Bugfixes \u00b6 Fixed ANRs during big response payloads processing. Fixed contentType response formatting. Fixed notifications importance in Android Q. Fixed date formatting in transaction overview. Fixed visibility of internal library classes and resources. Fixed XML formatting crash Dependency Updates \u00b6 Updated Kotlin to 1.3.61 Updated Retrofit to 2.6.4 Updated Room to 2.2.3 Updated OkHttp to 3.12.6 Updated Gson to 2.8.6 Updated Dokka to 0.10.0 Updated KtLint to 9.1.1 Updated Gradle wrapper to 6.1 Updated Android Gradle plugin to 3.5.3 Credits \u00b6 This release was possible thanks to the contribution of: @christopherniksch @yoavst @psh @kmayoral @vbuberen @dcampogiani @ullas-jain @rakshit444 @olivierperez @p-schneider @Volfor @cortinico @koral-- @redwarp @uOOOO @sprohaszka @PaulWoitaschek Version 3.0.1 (2019-08-16) \u00b6 This is a hotfix release for Chucker 3.0.0 . Summary of Changes \u00b6 Fix: #96 Limit size of binary image to 1 million bytes. Credits \u00b6 This release was possible thanks to the contribution of: @redwarp Version 3.0.0 (2019-08-12) \u00b6 This is a new major release of Chucker. Please note that this major release contains multiple new features (see below) as well as several breaking changes. Please refer to the migration guide if you need support in migrating from 2.x -> 3.0.0 or feel free to open an issue. Summary of Changes \u00b6 Chucker DB is now using Room instead of Cupboard as ORM. The public api of Chucker (classes in com.chuckerteam.chucker.api ) is now rewritten in Kotlin. Classes inside the .internal package should now not be considered part of the public api and expect them to change without major version bump. Removed usage of okhttp3.internal methods. General UI update of the library (new using ConstraintLayout) Added support to render images in Response page. Added support to search and highlight text in the Http Response body. We moved the artifact from JCenter to JitPack Contributors \u00b6 This release was possible thanks to the contribution of: @alorma @Ashok-Varma @cortinico @koral-- @olivierperez @OlliZi @PaulWoitaschek @psh @redwarp @uOOOO Version 2.0.4 (2019-05-18) \u00b6 Fix: #27 no-op Chuck#init method is missing Version 2.0.3 (2018-11-28) \u00b6 Fix: #20 Changed SqLite DB Version Number 3 -> 4 Version 2.0.2 (2018-11-14) \u00b6 Fix: #5 Empty Content-Encoding are allowed again Version 2.0.1 (2018-11-05) \u00b6 New: Adds a class ChuckCollector that can be used out of ChuckInterceptor. New: Chucker can now collect throwables. New: Adds a notification for throwables. New: Adds screens for throwables. New: Transaction class offers a fluent writing. New: Adds Chuck.registerDefaultCrashHanlder for debugging purpose only . Breaking: Chuck.getLaunchIntent needs one more parameter. Breaking: Built with Android plugin 3.1.x. Breaking: Target SDK version 27. Breaking: Support library 27.1.1. Breaking: API classes are now in package api . Misc: Move some internal classes. Version 1.1.0 (2017-08-06) \u00b6 Fix: Supports apps targeting Android O (API 26). Version 1.0.4 (2017-02-22) \u00b6 New: Displays uncompressed gzip encoded request/response bodies when used as a network interceptor. Version 1.0.3 (2017-02-14) \u00b6 New: Adds a maximum content length threshold, beyond which bodies are truncated. New: Adds a data retention length property and cleanup task. New: Adds a clear action to the notification. Fix: Mitigates against CursorWindow blowout when transactions are large. Version 1.0.2 (2017-02-10) \u00b6 Fix: Added Proguard rule for compat SearchView. Fix: Null search query displaying invalid results. Version 1.0.1 (2017-02-09) \u00b6 New: Adds a search action which filters on request path or response code. New: Adds a transaction count to the notification. Fix: Limits the size of the static transaction buffer correctly. Version 1.0.0 (2017-02-07) \u00b6 Initial release.","title":"Changelog"},{"location":"changelog/#change-log","text":"This file follows Keepachangelog format. Please add your entries according to this format.","title":"Change Log"},{"location":"changelog/#unreleased","text":"","title":"Unreleased"},{"location":"changelog/#added","text":"Decoding of request and response bodies can now be customized. In order to do this a BodyDecoder interface needs to be implemented and installed in the ChuckerInterceptor via ChuckerInterceptor.addBinaryDecoder(decoder) method. Decoded bodies are then displayed in the Chucker UI. Create dynamic shortcut when ChuckerInterceptor added. Users can opt out of this feature using createShortcut(false) in ChuckerInterceptor.Builder Brotli compression support Added ability to export list of transactions as .har file. Added ability to save single transaction as .har file.","title":"Added"},{"location":"changelog/#fixed","text":"Fixed request headers not being redacted in case of failures #545 . Fixed wrongful processing of one shot and duplex requests #544 . Fixed writing to database on the main thread #487 . Fixed RTL issue in payload view Fixed StrictMode ThreadPolicy violations #737","title":"Fixed"},{"location":"changelog/#removed","text":"Removed parametrized ChuckerInterceptor constructor in favour of builder pattern. Constructor that accepts only Context is still available. Removed the Throwable reporting feature as well as all the @Deprecated related methods.","title":"Removed"},{"location":"changelog/#changed","text":"Updated OkHttp to 4.9.1","title":"Changed"},{"location":"changelog/#version-352-2021-07-28","text":"This release is a re-deployment of 3.5.1, since 3.5.1 aar didn't upload properly on Maven Central.","title":"Version 3.5.2 (2021-07-28)"},{"location":"changelog/#version-351-2021-07-19","text":"Note: this release wasn't properly uploaded to Maven Central, so update to a newer verion is required.","title":"Version 3.5.1 (2021-07-19)"},{"location":"changelog/#fixed_1","text":"Fix crash on Android 12 due to missing immutability flags in deprecated error reporting feature #653 .","title":"Fixed"},{"location":"changelog/#version-350-2021-06-29","text":"Note: this release has issue with Android 12 support, so update to 3.5.2 is highly recommended.","title":"Version 3.5.0 (2021-06-29)"},{"location":"changelog/#added_1","text":"Android 12 support.","title":"Added"},{"location":"changelog/#fixed_2","text":"Fix crash on Android 12 due to missing immutability flags #593 . Fix not setting request body type correctly #538 .","title":"Fixed"},{"location":"changelog/#version-340-2020-11-05","text":"","title":"Version 3.4.0 (2020-11-05)"},{"location":"changelog/#added_2","text":"ChuckerInterceptor.Builder for fluent creation of the interceptor. It will also help us with preserving binary compatibility in future releases of 4.x . [#462]","title":"Added"},{"location":"changelog/#changed_1","text":"Bumped targetSDK and compileSDK to 30 (Android 11).","title":"Changed"},{"location":"changelog/#removed_1","text":"kotlin-android-extensions plugin for better compatibility with Kotlin 1.4.20.","title":"Removed"},{"location":"changelog/#fixed_3","text":"Fixed memory leak in MainActivity #465 . Fixed GzipSource is not closed error reported by StrictMode #472 . Fixed build failure for projects with new kotlin-parcelize plugin #480 .","title":"Fixed"},{"location":"changelog/#deprecated","text":"ChuckerInterceptor constructor is now deprecated. Unless Context is the only parameter that you pass into the constructor you should migrate to builder.","title":"Deprecated"},{"location":"changelog/#version-330-2020-09-30","text":"This is a new minor release with multiple fixes and improvements. After this release we are starting to work on a new major release 4.x with minSDK 21. Bumping minSDK to 21 is required to keep up with newer versions of OkHttp . Versions 3.x will be supported for 6 months (till March 2021) getting bugfixes and minor improvements.","title":"Version 3.3.0 (2020-09-30)"},{"location":"changelog/#summary-of-changes","text":"Added a new flag alwaysReadResponseBody into Chucker configuration to read the whole response body even if consumer fails to consume it. Added port numbers as part of the URL. Numbers appear if they are different from default 80 or 443. Chucker now shows partially read application responses properly. Earlier in 3.2.0 such responses didn't appear in the UI. Transaction size is defined by actual payload size now, not by Content-length header. Added empty state UI for payloads, so no more guessing if there is some error or the payload is really empty. Added ability to export list of transactions. Added ability to save single transaction as file. Added ability to format URL encoded forms with button to switch between encoded/decoded URLs. Added generation of contrast background for image payload to distinguish Chucker UI from the image itself. Switched OkHttp dependency from implementation to api , since it is available in the public API. List items are now focusable on Android TV devices. Further improved test coverage.","title":"Summary of changes"},{"location":"changelog/#deprecations","text":"Throwables capturing feature is officially deprecated and will be removed in next releases. More info in #321 .","title":"Deprecations"},{"location":"changelog/#bugfixes","text":"Fixed #311 with leaking Closable resource. Fixed #314 with overlapping UI on some device. Fixed #367 with empty shared text when Don't keep activities is turned on. Fixed #366 with crash when process dies. Fixed #394 with failing requests when FileNotFound error happens. Fixed #410 with conflicts when other apps already use generic FileProvider. Fixed #422 with IOException.","title":"Bugfixes"},{"location":"changelog/#dependency-updates","text":"Added Fragment-ktx 1.2.5 Added Palette-ktx 1.0.0 Updated Kotlin to 1.4.10 Updated Android Gradle plugin to 4.0.1 Updated Coroutine to 1.3.9 Updated AppCompat to 1.2.0 Updated ConstraintLayout to 2.0.1 Updated MaterialComponents to 1.2.1 Updated Gradle to 6.6.1","title":"Dependency updates"},{"location":"changelog/#credits","text":"This release was possible thanks to the contribution of: @adb-shell @cortinico @djrausch @gm-vm @JayNewstrom @MiSikora @vbuberen @psh","title":"Credits"},{"location":"changelog/#version-320-2020-04-04","text":"This is a new minor release with numerous internal changes.","title":"Version 3.2.0 (2020-04-04)"},{"location":"changelog/#summary-of-changes_1","text":"Chucker won't load the whole response into memory anymore, but will mutlicast it with the help of temporary files. It allows to avoid issues with OOM, like in reported in #218 . This change also allows to avoid problems with Chucker consuming responses, like reported in #242 . Added a red open padlock icon to clearly indicate HTTP requests in transactions list. Added TLS info (version and cipher suite) into Overview tab. Added ability to encode/decode URLs. Added RTL support. Switched from AsyncTasks to Kotlin coroutines. Switched to ViewBinding . Bumped targetSDK to 29. Greatly increased test coverage (we will add exact numbers and reports pretty soon).","title":"Summary of changes"},{"location":"changelog/#bugfixes_1","text":"Fix for #218 with OOM exceptions on big responses. Fix for #242 with Chucker throwing exceptions when used as networkInterceptor() . Fix for #240 with HttpHeader serialisation exceptions when obfuscation is used. Fix for #254 with response body search being case-sensitive. Fix for #255 with missing search icon on Response tab. Fix for #241 with overlapping texts.","title":"Bugfixes"},{"location":"changelog/#dependency-updates_1","text":"Added kotlinx-coroutines-core 1.3.5 Added kotlinx-coroutines-android 1.3.5 Updated Kotlin to 1.3.71 Updated Android Gradle plugin to 3.6.1 Updated Room to 2.2.5 Updated OkHttp to 3.12.10 Updated Detekt to 1.7.3 Updated Dokka to 0.10.1 Updated KtLint plugin to 9.2.1 Updated MaterialComponents to 1.1.0 Updated Gradle to 6.3","title":"Dependency updates"},{"location":"changelog/#credits_1","text":"This release was possible thanks to the contribution of: @adammasyk @cortinico @CuriousNikhil @hitanshu-dhawan @MiSikora @technoir42 @vbuberen","title":"Credits"},{"location":"changelog/#version-312-2020-02-09","text":"This is hot-fix release to fix multiple issues introduced in 3.1.0 .","title":"Version 3.1.2 (2020-02-09)"},{"location":"changelog/#summary-of-changes_2","text":"All Chucker screens now have their own ViewModel . Due to this change user can now open the transaction in progress and the content will appear as soon as transaction finishes. No need for reopening transaction anymore.","title":"Summary of Changes"},{"location":"changelog/#bugfixes_2","text":"Fixed an issue introduced in 3.1.0 where image downloading fails if OkHttp was used for image loading in libraries like Glide, Picasso or Coil. Fixed an issue with invalid CURL command generation. Fixed an issue with crashes if ProGuard/R8 minification is applied to Chucker. Fixed an issue with crash when user taps Save in a transaction, which is still in progress. Fixed an issue with crash when user taps Clear from notification shade while the original app is already dead. Fixed an issue with possible NPEs.","title":"Bugfixes"},{"location":"changelog/#credits_2","text":"This release was possible thanks to the contribution of: @MiSikora @vbuberen","title":"Credits"},{"location":"changelog/#version-311-2020-01-25","text":"This is hot-fix release to fix issue introduced in 3.1.0 .","title":"Version 3.1.1 (2020-01-25)"},{"location":"changelog/#summary-of-changes_3","text":"Fixed an issue introduced in 3.1.0 where some of response bodies were shown as null and their sizes were 0 bytes.","title":"Summary of Changes"},{"location":"changelog/#credits_3","text":"This release was possible thanks to the contribution of: @cortinico","title":"Credits"},{"location":"changelog/#version-310-2020-01-24","text":"","title":"Version 3.1.0 (2020-01-24)"},{"location":"changelog/#this-version-shouldnt-be-used-as-dependency-due-to-203-use-311-instead","text":"This is a new minor release of Chucker. Please note that this minor release contains multiple new features (see below) as well as multiple bugfixes.","title":"This version shouldn't be used as dependency due to #203. Use 3.1.1 instead."},{"location":"changelog/#summary-of-changes_4","text":"The library is now fully converted to Kotlin and migrated to AndroidX! The whole UI has been revamped to support Dark Theme which follows your device theme. The Response/Request Body is now displayed in a RecyclerView , drastically improving performances on big payloads. HTTP Response/Request Body can now be saved in file. Notifications for Throwable and HTTP Traffic are now going into separate channels. A lot of classes inside the .internal package have restricted visibility (from public to internal). Also, resources like strings, dimens and drawables from Chucker won't appear in your autocomplete suggestions.","title":"Summary of Changes"},{"location":"changelog/#bugfixes_3","text":"Fixed ANRs during big response payloads processing. Fixed contentType response formatting. Fixed notifications importance in Android Q. Fixed date formatting in transaction overview. Fixed visibility of internal library classes and resources. Fixed XML formatting crash","title":"Bugfixes"},{"location":"changelog/#dependency-updates_2","text":"Updated Kotlin to 1.3.61 Updated Retrofit to 2.6.4 Updated Room to 2.2.3 Updated OkHttp to 3.12.6 Updated Gson to 2.8.6 Updated Dokka to 0.10.0 Updated KtLint to 9.1.1 Updated Gradle wrapper to 6.1 Updated Android Gradle plugin to 3.5.3","title":"Dependency Updates"},{"location":"changelog/#credits_4","text":"This release was possible thanks to the contribution of: @christopherniksch @yoavst @psh @kmayoral @vbuberen @dcampogiani @ullas-jain @rakshit444 @olivierperez @p-schneider @Volfor @cortinico @koral-- @redwarp @uOOOO @sprohaszka @PaulWoitaschek","title":"Credits"},{"location":"changelog/#version-301-2019-08-16","text":"This is a hotfix release for Chucker 3.0.0 .","title":"Version 3.0.1 (2019-08-16)"},{"location":"changelog/#summary-of-changes_5","text":"Fix: #96 Limit size of binary image to 1 million bytes.","title":"Summary of Changes"},{"location":"changelog/#credits_5","text":"This release was possible thanks to the contribution of: @redwarp","title":"Credits"},{"location":"changelog/#version-300-2019-08-12","text":"This is a new major release of Chucker. Please note that this major release contains multiple new features (see below) as well as several breaking changes. Please refer to the migration guide if you need support in migrating from 2.x -> 3.0.0 or feel free to open an issue.","title":"Version 3.0.0 (2019-08-12)"},{"location":"changelog/#summary-of-changes_6","text":"Chucker DB is now using Room instead of Cupboard as ORM. The public api of Chucker (classes in com.chuckerteam.chucker.api ) is now rewritten in Kotlin. Classes inside the .internal package should now not be considered part of the public api and expect them to change without major version bump. Removed usage of okhttp3.internal methods. General UI update of the library (new using ConstraintLayout) Added support to render images in Response page. Added support to search and highlight text in the Http Response body. We moved the artifact from JCenter to JitPack","title":"Summary of Changes"},{"location":"changelog/#contributors","text":"This release was possible thanks to the contribution of: @alorma @Ashok-Varma @cortinico @koral-- @olivierperez @OlliZi @PaulWoitaschek @psh @redwarp @uOOOO","title":"Contributors"},{"location":"changelog/#version-204-2019-05-18","text":"Fix: #27 no-op Chuck#init method is missing","title":"Version 2.0.4 (2019-05-18)"},{"location":"changelog/#version-203-2018-11-28","text":"Fix: #20 Changed SqLite DB Version Number 3 -> 4","title":"Version 2.0.3 (2018-11-28)"},{"location":"changelog/#version-202-2018-11-14","text":"Fix: #5 Empty Content-Encoding are allowed again","title":"Version 2.0.2 (2018-11-14)"},{"location":"changelog/#version-201-2018-11-05","text":"New: Adds a class ChuckCollector that can be used out of ChuckInterceptor. New: Chucker can now collect throwables. New: Adds a notification for throwables. New: Adds screens for throwables. New: Transaction class offers a fluent writing. New: Adds Chuck.registerDefaultCrashHanlder for debugging purpose only . Breaking: Chuck.getLaunchIntent needs one more parameter. Breaking: Built with Android plugin 3.1.x. Breaking: Target SDK version 27. Breaking: Support library 27.1.1. Breaking: API classes are now in package api . Misc: Move some internal classes.","title":"Version 2.0.1 (2018-11-05)"},{"location":"changelog/#version-110-2017-08-06","text":"Fix: Supports apps targeting Android O (API 26).","title":"Version 1.1.0 (2017-08-06)"},{"location":"changelog/#version-104-2017-02-22","text":"New: Displays uncompressed gzip encoded request/response bodies when used as a network interceptor.","title":"Version 1.0.4 (2017-02-22)"},{"location":"changelog/#version-103-2017-02-14","text":"New: Adds a maximum content length threshold, beyond which bodies are truncated. New: Adds a data retention length property and cleanup task. New: Adds a clear action to the notification. Fix: Mitigates against CursorWindow blowout when transactions are large.","title":"Version 1.0.3 (2017-02-14)"},{"location":"changelog/#version-102-2017-02-10","text":"Fix: Added Proguard rule for compat SearchView. Fix: Null search query displaying invalid results.","title":"Version 1.0.2 (2017-02-10)"},{"location":"changelog/#version-101-2017-02-09","text":"New: Adds a search action which filters on request path or response code. New: Adds a transaction count to the notification. Fix: Limits the size of the static transaction buffer correctly.","title":"Version 1.0.1 (2017-02-09)"},{"location":"changelog/#version-100-2017-02-07","text":"Initial release.","title":"Version 1.0.0 (2017-02-07)"},{"location":"configuration/","text":"You can customize chucker providing an instance of a ChuckerCollector : // Create the Collector val chuckerCollector = ChuckerCollector ( context = this , // Toggles visibility of the push notification showNotification = true , // Allows to customize the retention period of collected data retentionPeriod = RetentionManager . Period . ONE_HOUR ) // Create the Interceptor val chuckerInterceptor = ChuckerInterceptor . Builder ( context ) // The previously created Collector . collector ( chuckerCollector ) // The max body content length in bytes, after this responses will be truncated. . maxContentLength ( 250 _000L ) // List of headers to replace with ** in the Chucker UI . redactHeaders ( \"Auth-Token\" , \"Bearer\" ) // Read the whole response body even when the client does not consume the response completely. // This is useful in case of parsing errors or when the response body // is closed before being read like in Retrofit with Void and Unit types. . alwaysReadResponseBody ( true ) . build () // Don't forget to plug the ChuckerInterceptor inside the OkHttpClient val client = OkHttpClient . Builder () . addInterceptor ( chuckerInterceptor ) . build ()","title":"Advanced configuration"},{"location":"contributing/","text":"We're offering support for Chucker on the #chucker channel on kotlinlang.slack.com . Come and join the conversation over there. We're looking for contributors! Don't be shy. \ud83d\ude01 Feel free to open issues/pull requests to help us improve this project. When reporting a new Issue, make sure to attach Screenshots , Videos or GIFs of the problem you are reporting. When submitting a new PR, make sure tests are all green. Write new tests if necessary. Short TODO List for new contributors: Increment the test coverage. Issues marked as Help wanted Building \ud83d\udee0 \u00b6 In order to start working on Chucker, you need to fork the project and open it in Android Studio/IntelliJ IDEA. Before committing we suggest you install the pre-commit hooks with the following command: ./gradlew installGitHook This will make sure your code is validated against KtLint and Detekt before every commit. The command will run automatically before the clean task, so you should have the pre-commit hook installed by then. Before submitting a PR please run: ./gradlew build This will build the library and will run all the verification tasks (ktlint, detekt, lint, unit tests) locally. This will make sure your CI checks will pass.","title":"Contributing"},{"location":"contributing/#building","text":"In order to start working on Chucker, you need to fork the project and open it in Android Studio/IntelliJ IDEA. Before committing we suggest you install the pre-commit hooks with the following command: ./gradlew installGitHook This will make sure your code is validated against KtLint and Detekt before every commit. The command will run automatically before the clean task, so you should have the pre-commit hook installed by then. Before submitting a PR please run: ./gradlew build This will build the library and will run all the verification tasks (ktlint, detekt, lint, unit tests) locally. This will make sure your CI checks will pass.","title":"Building \ud83d\udee0"},{"location":"faq/","text":"Why are some of my request headers missing? Why are retries and redirects not being captured discretely? Why are my encoded request/response bodies not appearing as plain text? Please refer to this section of the OkHttp documentation . You can choose to use Chucker as either an application or network interceptor, depending on your requirements. Why Android < 21 is no longer supported? In order to keep up with the changes in OkHttp we decided to bump its version in 4.x release. Chucker 3.4.x supports Android 16+ but its active development stopped and only bug fixes and minor improvements will land on 3.x branch till March 2021.","title":"FAQ"},{"location":"getting_started/","text":"Chucker is distributed through Maven Central . To use it you need to add the following Gradle dependency to your build.gradle file of you android app module (NOT the root file). Please note that you should add both the library and the the library-no-op variant to isolate Chucker from release builds as follows: dependencies { debugImplementation \"com.github.chuckerteam.chucker:library:3.4.0\" releaseImplementation \"com.github.chuckerteam.chucker:library-no-op:3.4.0\" } To start using Chucker, just plug it a new ChuckerInterceptor to your OkHttp Client Builder: val client = OkHttpClient . Builder () . addInterceptor ( ChuckerInterceptor ( context )) . build () Enable Java 8 support . android { compileOptions { sourceCompatibility JavaVersion . VERSION_1_8 targetCompatibility JavaVersion . VERSION_1_8 } // For Kotlin projects add also this line kotlinOptions . jvmTarget = \"1.8\" } That's it! \ud83c\udf89 Chucker will now record all HTTP interactions made by your OkHttp client. Historically, Chucker was distributed through JitPack. You can find older version of Chucker here: .","title":"Getting started"},{"location":"snapshots/","text":"Development of Chucker happens in the develop branch. Every push to develop will trigger a publishing of a SNAPSHOT artifact for the upcoming version. You can get those snapshots artifacts directly from Sonatype with: repositories { maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" } } dependencies { debugImplementation \"com.github.chuckerteam.chucker:library:3.4.1-SNAPSHOT\" releaseImplementation \"com.github.chuckerteam.chucker:library-no-op:3.4.1-SNAPSHOT\" }","title":"Snapshots"},{"location":"team/","text":"Chucker is currently developed and maintained by the ChuckerTeam . When submitting a new PR, please ping one of: @cortinico @MiSikora @olivierperez @vbuberen","title":"Team"},{"location":"migrations/migrating_from_2.0/","text":"Migrating from Chucker 2.x to 3.x \u00b6 Please refer to this page if you're migrating from chucker version 2.0.4 to 3.x . In this page you will find the summary of all the breaking changes that you potentially need to fix. 1. Class name changes \u00b6 Generally name of classes from Chucker 2.x used to have Chuck as a prefix (e.g. ChuckInterceptor ). In version 3.x we updated the naming of all the classes to have Chucker as a prefix (e.g. ChuckerInterceptor ). This is valid for all the classes in the library. So if to launch the UI of Chucker, you would normally call: Chuck . getLaunchIntent (...) now you will call Chucker . getLaunchIntent (...) 2. Package name changes \u00b6 Please note that with version 3.x package name is also updated. The new package for the classes of Chucker will be com.chuckerteam.chucker.api . Here a summary of the name/package changes in chucker Old New com.readystatesoftware.chuck.api.Chuck com.chuckerteam.chucker.api.Chucker com.readystatesoftware.chuck.api.ChuckCollector com.chuckerteam.chucker.api.ChuckerCollector com.readystatesoftware.chuck.api.ChuckerInterceptor com.chuckerteam.chucker.api.ChuckerInterceptor 3. Update the code to configure the interceptor \u00b6 Chucker v2.0 used to use a Builder pattern to configure your interceptor. Chucker v3.0 instead is using Kotlin named parameters with default values to configure the interceptor. Multiple builder methods have been removed and you need to replace them with parameters from the constructors. Java \u00b6 The following code: ChuckInterceptor interceptor = new ChuckInterceptor ( context , collector ) . maxContentLength ( 120000L ); should be updated to: ChuckInterceptor interceptor = new ChuckInterceptor ( context , collector , 120000 ) Kotlin \u00b6 We suggest to use Kotlin to configure your interceptor as it makes the code more clean/elegant. The following code: val retentionManager = RetentionManager ( androidApplication , ChuckCollector . Period . ONE_HOUR ) val collector = ChuckCollector ( androidApplication ) . retentionManager ( retentionManager ) . showNotification ( true ) val interceptor = ChuckInterceptor ( context , collector ) . maxContentLength ( 120000L ) should be updated to: val collector = ChuckerCollector ( context = this , showNotification = true , retentionPeriod = RetentionManager . Period . ONE_HOUR ) val interceptor = ChuckerInterceptor ( context = context , collector = collector , maxContentLength = 120000L ) 4. RetentionManager is now replaced by the retentionPeriod \u00b6 You don't need to create a RetentionManager anymore and you simply have to specify the retentionPeriod parameter when creating a ChuckerCollector . The Period enum has also been moved from ChuckCollector to RetentionManager . 5. registerDefaultCrashHanlder typo \u00b6 The function Chuck.registerDefaultCrashHanlder contained a typo in the name and now is moved to Chucker.registerDefaultCrashHandler .","title":"From Chucker 2.0"},{"location":"migrations/migrating_from_2.0/#migrating-from-chucker-2x-to-3x","text":"Please refer to this page if you're migrating from chucker version 2.0.4 to 3.x . In this page you will find the summary of all the breaking changes that you potentially need to fix.","title":"Migrating from Chucker 2.x to 3.x"},{"location":"migrations/migrating_from_2.0/#1-class-name-changes","text":"Generally name of classes from Chucker 2.x used to have Chuck as a prefix (e.g. ChuckInterceptor ). In version 3.x we updated the naming of all the classes to have Chucker as a prefix (e.g. ChuckerInterceptor ). This is valid for all the classes in the library. So if to launch the UI of Chucker, you would normally call: Chuck . getLaunchIntent (...) now you will call Chucker . getLaunchIntent (...)","title":"1. Class name changes"},{"location":"migrations/migrating_from_2.0/#2-package-name-changes","text":"Please note that with version 3.x package name is also updated. The new package for the classes of Chucker will be com.chuckerteam.chucker.api . Here a summary of the name/package changes in chucker Old New com.readystatesoftware.chuck.api.Chuck com.chuckerteam.chucker.api.Chucker com.readystatesoftware.chuck.api.ChuckCollector com.chuckerteam.chucker.api.ChuckerCollector com.readystatesoftware.chuck.api.ChuckerInterceptor com.chuckerteam.chucker.api.ChuckerInterceptor","title":"2. Package name changes"},{"location":"migrations/migrating_from_2.0/#3-update-the-code-to-configure-the-interceptor","text":"Chucker v2.0 used to use a Builder pattern to configure your interceptor. Chucker v3.0 instead is using Kotlin named parameters with default values to configure the interceptor. Multiple builder methods have been removed and you need to replace them with parameters from the constructors.","title":"3. Update the code to configure the interceptor"},{"location":"migrations/migrating_from_2.0/#java","text":"The following code: ChuckInterceptor interceptor = new ChuckInterceptor ( context , collector ) . maxContentLength ( 120000L ); should be updated to: ChuckInterceptor interceptor = new ChuckInterceptor ( context , collector , 120000 )","title":"Java"},{"location":"migrations/migrating_from_2.0/#kotlin","text":"We suggest to use Kotlin to configure your interceptor as it makes the code more clean/elegant. The following code: val retentionManager = RetentionManager ( androidApplication , ChuckCollector . Period . ONE_HOUR ) val collector = ChuckCollector ( androidApplication ) . retentionManager ( retentionManager ) . showNotification ( true ) val interceptor = ChuckInterceptor ( context , collector ) . maxContentLength ( 120000L ) should be updated to: val collector = ChuckerCollector ( context = this , showNotification = true , retentionPeriod = RetentionManager . Period . ONE_HOUR ) val interceptor = ChuckerInterceptor ( context = context , collector = collector , maxContentLength = 120000L )","title":"Kotlin"},{"location":"migrations/migrating_from_2.0/#4-retentionmanager-is-now-replaced-by-the-retentionperiod","text":"You don't need to create a RetentionManager anymore and you simply have to specify the retentionPeriod parameter when creating a ChuckerCollector . The Period enum has also been moved from ChuckCollector to RetentionManager .","title":"4. RetentionManager is now replaced by the retentionPeriod"},{"location":"migrations/migrating_from_2.0/#5-registerdefaultcrashhanlder-typo","text":"The function Chuck.registerDefaultCrashHanlder contained a typo in the name and now is moved to Chucker.registerDefaultCrashHandler .","title":"5. registerDefaultCrashHanlder typo"},{"location":"migrations/migrating_from_chuck/","text":"Migrating from Chuck \u00b6 Please refer to this page if you're migrating from chuck to chucker The following guide is written assuming you're planning to use Chucker version 3.0.0. 1. Update the Gradle dependency \u00b6 If you're using Chuck you need to update your gradle dependencies block from this: dependencies { debugCompile \"com.readystatesoftware.chuck:library:1.1.0\" releaseCompile \"com.readystatesoftware.chuck:library-no-op:1.1.0\" } to this: repositories { // Other repositories here. maven { url \"https://jitpack.io\" } } dependencies { debugImplementation \"com.github.ChuckerTeam.Chucker:library:3.4.0\" releaseImplementation \"com.github.ChuckerTeam.Chucker:library-no-op:3.4.0\" } Please note that Chucker is distributed on JitPack at the moment so you need to specify it in the repositories block. 2. Update the Interceptor initialization code \u00b6 You need to update the initialization code of Chuck from this: import com.readystatesoftware.chuck.ChuckInterceptor; val client = OkHttpClient . Builder () . addInterceptor ( new ChuckInterceptor ( context )) . build () to this: import com.chuckerteam.chucker.api.ChuckerInterceptor ; val client = OkHttpClient . Builder () . addInterceptor ( new ChuckerInterceptor ( context )) . build () 3. Update the code to configure the interceptor \u00b6 Chuck used to use a Builder pattern to configure your interceptor. Chucker instead is using Kotlin named parameters with default values to configure the interceptor. Multiple builder methods have been removed and you need to replace them with parameters from the constructors. Moreover the functions retainDataFor and showNotification on the interceptor have been moved to the ChuckerCollector class. Please note that those methods are not available on the Interceptor anymore and you need to update your code accordingly. Java \u00b6 The following code: ChuckInterceptor interceptor = new ChuckInterceptor ( context ) . showNotification ( true ) . retainDataFor ( Period . ONE_HOUR ) . maxContentLength ( 120000L ); should be updated to: ChuckerCollector collector = new ChuckerCollector ( context , true , RetentionManager . Period . ONE_HOUR ) ChuckerInterceptor interceptor = new ChuckerInterceptor ( context , collector , 120000L ); Kotlin \u00b6 We suggest to use Kotlin to configure your interceptor as it makes the code more clean/elegant. The following code: val interceptor = ChuckInterceptor ( context ) . showNotification ( true ) . retainDataFor ( Period . ONE_HOUR ) . maxContentLength ( 120000L ) should be updated to: val collector = ChuckerCollector ( context = this , showNotification = true , retentionPeriod = RetentionManager . Period . ONE_HOUR ) val interceptor = ChuckerInterceptor ( context = context , collector = collector , maxContentLength = 120000L ) Naming \u00b6 Generally name of classes from Chuck (e.g. ChuckInterceptor ) got udpated to Chucker (e.g. ChuckerInterceptor ). This is valid for all the classes in the library. So if to launch the UI of Chuck, you would normally call: Chuck . getLaunchIntent (...) now you will call Chucker . getLaunchIntent (...)","title":"From Chuck"},{"location":"migrations/migrating_from_chuck/#migrating-from-chuck","text":"Please refer to this page if you're migrating from chuck to chucker The following guide is written assuming you're planning to use Chucker version 3.0.0.","title":"Migrating from Chuck"},{"location":"migrations/migrating_from_chuck/#1-update-the-gradle-dependency","text":"If you're using Chuck you need to update your gradle dependencies block from this: dependencies { debugCompile \"com.readystatesoftware.chuck:library:1.1.0\" releaseCompile \"com.readystatesoftware.chuck:library-no-op:1.1.0\" } to this: repositories { // Other repositories here. maven { url \"https://jitpack.io\" } } dependencies { debugImplementation \"com.github.ChuckerTeam.Chucker:library:3.4.0\" releaseImplementation \"com.github.ChuckerTeam.Chucker:library-no-op:3.4.0\" } Please note that Chucker is distributed on JitPack at the moment so you need to specify it in the repositories block.","title":"1. Update the Gradle dependency"},{"location":"migrations/migrating_from_chuck/#2-update-the-interceptor-initialization-code","text":"You need to update the initialization code of Chuck from this: import com.readystatesoftware.chuck.ChuckInterceptor; val client = OkHttpClient . Builder () . addInterceptor ( new ChuckInterceptor ( context )) . build () to this: import com.chuckerteam.chucker.api.ChuckerInterceptor ; val client = OkHttpClient . Builder () . addInterceptor ( new ChuckerInterceptor ( context )) . build ()","title":"2. Update the Interceptor initialization code"},{"location":"migrations/migrating_from_chuck/#3-update-the-code-to-configure-the-interceptor","text":"Chuck used to use a Builder pattern to configure your interceptor. Chucker instead is using Kotlin named parameters with default values to configure the interceptor. Multiple builder methods have been removed and you need to replace them with parameters from the constructors. Moreover the functions retainDataFor and showNotification on the interceptor have been moved to the ChuckerCollector class. Please note that those methods are not available on the Interceptor anymore and you need to update your code accordingly.","title":"3. Update the code to configure the interceptor"},{"location":"migrations/migrating_from_chuck/#java","text":"The following code: ChuckInterceptor interceptor = new ChuckInterceptor ( context ) . showNotification ( true ) . retainDataFor ( Period . ONE_HOUR ) . maxContentLength ( 120000L ); should be updated to: ChuckerCollector collector = new ChuckerCollector ( context , true , RetentionManager . Period . ONE_HOUR ) ChuckerInterceptor interceptor = new ChuckerInterceptor ( context , collector , 120000L );","title":"Java"},{"location":"migrations/migrating_from_chuck/#kotlin","text":"We suggest to use Kotlin to configure your interceptor as it makes the code more clean/elegant. The following code: val interceptor = ChuckInterceptor ( context ) . showNotification ( true ) . retainDataFor ( Period . ONE_HOUR ) . maxContentLength ( 120000L ) should be updated to: val collector = ChuckerCollector ( context = this , showNotification = true , retentionPeriod = RetentionManager . Period . ONE_HOUR ) val interceptor = ChuckerInterceptor ( context = context , collector = collector , maxContentLength = 120000L )","title":"Kotlin"},{"location":"migrations/migrating_from_chuck/#naming","text":"Generally name of classes from Chuck (e.g. ChuckInterceptor ) got udpated to Chucker (e.g. ChuckerInterceptor ). This is valid for all the classes in the library. So if to launch the UI of Chuck, you would normally call: Chuck . getLaunchIntent (...) now you will call Chucker . getLaunchIntent (...)","title":"Naming"}]}